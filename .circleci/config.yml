version: 2.1
jobs:
  build:
    docker:
      - image: ubuntu:20.04 # the primary container, where your job's commands are run
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    steps:
      - checkout # check out the code in the project directory
      - run:
          name: Server dependencies
          command: |
            apt-get update
            apt-get install -y python3-virtualenv cron
            crontab config/crontab
      - run:
          name: Setup virtual environnement
          command: |
            virtualenv venv
            venv/bin/pip install -U pip
            venv/bin/pip install -r requirements.txt
  test:
    docker:
      - image: ubuntu:20.04 # the primary container, where your job's commands are run
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    steps:
      - checkout # check out the code in the project directory
      - run:
          name: Server dependencies
          command: |
            apt-get update
            apt-get install -y python3-virtualenv cron
            crontab config/crontab
      - run:
          name: Setup virtual environnement
          command: |
            virtualenv venv
            venv/bin/pip install -U pip
            venv/bin/pip install -r requirements.txt
      - run:
          name: Run tests
          command: venv/bin/python -m unittest app/tests.py
  deploy:
   machine:
     enabled: true
   steps:
     - add_ssh_keys:
         fingerprints:
           - "a4:f2:c8:e6:9e:12:4c:41:a8:ef:28:14:3b:b5:5d:93"
     - run:
         name: Deploy Over SSH
         command: |
           ssh $SSH_USER@$SSH_HOST "git -C ~/server pull origin master"
           ssh $SSH_USER@$SSH_HOST "~/venv/bin/pip install -r ~/server/requirements.txt"
workflows:
 version: 2.1
 build-test-deploy:
   jobs:
     - build
     - test:
         requires:
           - build
     - deploy:
         requires:
           - test
         filters:
           branches:
             only: master # only deploy on the master branch
